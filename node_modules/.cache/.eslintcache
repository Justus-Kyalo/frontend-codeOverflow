[{"/home/john/development/frontend-codeOverflow/src/index.js":"1","/home/john/development/frontend-codeOverflow/src/App.js":"2","/home/john/development/frontend-codeOverflow/src/store/csrf.js":"3","/home/john/development/frontend-codeOverflow/src/store/session.js":"4","/home/john/development/frontend-codeOverflow/src/store/index.js":"5","/home/john/development/frontend-codeOverflow/src/store/answers.js":"6","/home/john/development/frontend-codeOverflow/src/store/questions.js":"7","/home/john/development/frontend-codeOverflow/src/store/tags.js":"8","/home/john/development/frontend-codeOverflow/src/store/users.js":"9","/home/john/development/frontend-codeOverflow/src/components/Nav/index.js":"10","/home/john/development/frontend-codeOverflow/src/components/LoginFormComponent/index.js":"11","/home/john/development/frontend-codeOverflow/src/components/SignupFormComponent/index.js":"12","/home/john/development/frontend-codeOverflow/src/components/UserShowComponent/index.js":"13","/home/john/development/frontend-codeOverflow/src/components/UserIndexComponent/index.js":"14","/home/john/development/frontend-codeOverflow/src/components/Splash/index.js":"15","/home/john/development/frontend-codeOverflow/src/components/QuestionIndexComponent/index.js":"16","/home/john/development/frontend-codeOverflow/src/components/QuestionShowComponent/index.js":"17","/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/index.js":"18","/home/john/development/frontend-codeOverflow/src/components/QuestionFormComponent/index.js":"19","/home/john/development/frontend-codeOverflow/src/components/LeftSidebarComponent/index.js":"20","/home/john/development/frontend-codeOverflow/src/components/AnswerEditFormComponent/index.js":"21","/home/john/development/frontend-codeOverflow/src/components/QuestionEditFormComponent/index.js":"22","/home/john/development/frontend-codeOverflow/src/components/Footer/index.js":"23","/home/john/development/frontend-codeOverflow/src/components/PageNotFound/index.js":"24","/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/tags.js":"25","/home/john/development/frontend-codeOverflow/src/components/PageNotFound/notpagefound.js":"26","/home/john/development/frontend-codeOverflow/src/components/QuestionItemComponent/index.js":"27","/home/john/development/frontend-codeOverflow/src/components/VoteComponent/index.js":"28","/home/john/development/frontend-codeOverflow/src/components/AnswerFormComponent/index.js":"29","/home/john/development/frontend-codeOverflow/src/components/AnswerIndexComponent/index.js":"30","/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/tag.js":"31","/home/john/development/frontend-codeOverflow/src/store/votes.js":"32","/home/john/development/frontend-codeOverflow/src/components/AnswerItemComponent/index.js":"33"},{"size":1303,"mtime":1681827661144,"results":"34","hashOfConfig":"35"},{"size":2447,"mtime":1681827661132,"results":"36","hashOfConfig":"35"},{"size":418,"mtime":1681827661144,"results":"37","hashOfConfig":"35"},{"size":2240,"mtime":1681827661148,"results":"38","hashOfConfig":"35"},{"size":927,"mtime":1681827661144,"results":"39","hashOfConfig":"35"},{"size":2040,"mtime":1681827661144,"results":"40","hashOfConfig":"35"},{"size":2664,"mtime":1681827661148,"results":"41","hashOfConfig":"35"},{"size":1845,"mtime":1681827661148,"results":"42","hashOfConfig":"35"},{"size":1587,"mtime":1681827661148,"results":"43","hashOfConfig":"35"},{"size":2485,"mtime":1681990627084,"results":"44","hashOfConfig":"35"},{"size":4498,"mtime":1681827661132,"results":"45","hashOfConfig":"35"},{"size":4698,"mtime":1681827661140,"results":"46","hashOfConfig":"35"},{"size":721,"mtime":1681827661144,"results":"47","hashOfConfig":"35"},{"size":932,"mtime":1681827661144,"results":"48","hashOfConfig":"35"},{"size":2533,"mtime":1681966533066,"results":"49","hashOfConfig":"35"},{"size":3400,"mtime":1681827661136,"results":"50","hashOfConfig":"35"},{"size":3341,"mtime":1681827661140,"results":"51","hashOfConfig":"35"},{"size":578,"mtime":1681827661140,"results":"52","hashOfConfig":"35"},{"size":6011,"mtime":1681827661136,"results":"53","hashOfConfig":"35"},{"size":1485,"mtime":1681827661132,"results":"54","hashOfConfig":"35"},{"size":2104,"mtime":1681827661132,"results":"55","hashOfConfig":"35"},{"size":6919,"mtime":1681827661136,"results":"56","hashOfConfig":"35"},{"size":1938,"mtime":1681968972650,"results":"57","hashOfConfig":"35"},{"size":1217,"mtime":1681827661136,"results":"58","hashOfConfig":"35"},{"size":397,"mtime":1681827661140,"results":"59","hashOfConfig":"35"},{"size":532,"mtime":1681827661136,"results":"60","hashOfConfig":"35"},{"size":1935,"mtime":1681827661136,"results":"61","hashOfConfig":"35"},{"size":3534,"mtime":1681827661144,"results":"62","hashOfConfig":"35"},{"size":1350,"mtime":1681827661132,"results":"63","hashOfConfig":"35"},{"size":982,"mtime":1681827661132,"results":"64","hashOfConfig":"35"},{"size":286,"mtime":1681827661140,"results":"65","hashOfConfig":"35"},{"size":965,"mtime":1681827661148,"results":"66","hashOfConfig":"35"},{"size":1880,"mtime":1681827661132,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"159qfwq",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/john/development/frontend-codeOverflow/src/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/App.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/csrf.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/session.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/answers.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/questions.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/tags.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/users.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/Nav/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/LoginFormComponent/index.js",["178","179","180","181"],[],"import React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect, useHistory, useNavigate } from \"react-router-dom\";\nimport './LoginForm.css';\nimport Typewriter from 'typewriter-effect/dist/core'\nimport { useRef } from \"react\";\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const isValidEmail = (email) => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  const handleEmptiness = () => {\n    if(email === \"\" && password === \"\"){\n      setEmailError(\"Email cannot be empty.\");\n      setPasswordError(\"Password cannot be empty.\");\n    } else if (email === \"\" && password !== \"\"){\n      setEmailError(\"Email cannot be empty.\");\n      setPasswordError(\"\");\n    } else {\n      setEmailError(\"\");\n      setPasswordError(\"Password cannot be empty.\");\n    }\n  }\n\n  const validateProperEmail = () => {\n    if (!isValidEmail(email)) {\n        setEmailError(\"The email is not a valid email address.\")\n        setPasswordError(\"\")\n        setErrors([]);\n    } else {\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      setErrors([]);\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n\n    handleEmptiness();\n    validateProperEmail();\n\n    if (errors.length !== 0){\n      setEmailError(\"\");\n      setPasswordError(\"\");\n    }\n\n    return dispatch(sessionActions.login({ email, password }))\n      .catch(async (res) => {\n        const data = await res.json();\n        if (data && data.errors){\n          setErrors(data.errors);\n        }\n      });\n  };\n\n  const handleDemo = (e) => {\n    e.preventDefault();\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisabled(!disabled);\n\n    // document.querySelector(\".demo\").disabled = true;\n    // document.querySelector(\"#email\").disabled = true;\n    // document.querySelector(\"#password\").disabled = true;\n\n    let emailDOM = document.getElementById(\"email\");\n    let passwordDOM = document.getElementById(\"password\")\n    let emailNodeCreator = function(character){\n      emailDOM.value = emailDOM.value + character;\n      return null;\n    }\n\n    let emailTypewriter = new Typewriter(emailDOM,\n      {\n        onCreateTextNode: emailNodeCreator\n      });\n\n      emailTypewriter\n        .typeString(\"demo@user.io\")\n        .start();\n\n      let passwordNodeCreator = function(character){\n          passwordDOM.value = passwordDOM.value + character;\n          return null;\n        };\n    \n    let passwordTypewriter = new Typewriter(passwordDOM,\n      {\n        onCreateTextNode: passwordNodeCreator\n      });\n    \n        passwordTypewriter\n          .typeString(\"password\")\n          .start()\n          \n        setTimeout();\n  };\n\n \n\n  return (\n    <div className=\"login-page\">\n      <form className=\"login-form\" onSubmit={handleSubmit}> \n      <div className=\"credentials\">\n        <ul>\n        </ul>\n          <label htmlFor=\"email\" id=\"emailLabel\">\n            Email\n          </label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              disabled={disabled}\n            />\n            {errors.map(error => <li key={error}>{error}</li>)}\n            {emailError && <p style={{color: 'red'}}>{emailError}</p>}\n            <label htmlFor=\"password\" id=\"passwordLabel\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              disabled={disabled}\n            />\n            {passwordError && <p style={{color: 'red'}}>{passwordError}</p>}\n\n            <button className=\"login-button log-hover\" type=\"submit\" disabled={disabled}>Log in</button>\n      </div>\n      <div className=\"link\">\n        <div>\n          Don't have an account?\n          <Link to=\"/signup\">\n            <span> Sign up</span>\n          </Link>\n        </div>\n      </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginFormPage;","/home/john/development/frontend-codeOverflow/src/components/SignupFormComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/UserShowComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/UserIndexComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/Splash/index.js",["182","183","184","185","186","187"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport QuestionIndex from \"../QuestionIndexComponent\";\nimport \"./index.css\";\nimport { SiRedux, SiPostgresql, SiReact } from \"react-icons/si\";\nimport { DiRuby, DiReact } from \"react-icons/di\";\nimport { useRef } from \"react\";\n\nconst SplashPage = () => {\n  const sessionUser = useSelector((state) => state.session.user);\n  const jobRef = useRef(null);\n\n  useEffect(() => {\n    const jobs = [\n      \"Developer\",\n      \"Technical Mentor\",\n      \"System Admin\",\n      \"Student\",\n      \"Data Scientiest\",\n      \"Product Designer\",\n    ];\n    let i = 1;\n    setInterval(() => {\n      if (i >= jobs.length) {\n        i = 1;\n      }\n      if (jobRef && jobRef.current) {\n        jobRef.current.innerHTML = jobs[i];\n        jobRef.current.classList.add(\"animation\");\n        i++;\n      }\n    }, 2000);\n  });\n\n  if (sessionUser === null) {\n    return (\n      <>\n        <div id=\"container\">\n          <div id=\"black-box\" className=\"row align-items-center\">\n          <div className=\"col\">\n            <h1 className=\"animation-container\">\n              Every{\" \"}\n              <span className=\"job\" ref={jobRef}>\n                developer\n              </span>{\" \"}\n             \n              <br />\n              has a tab open on <span className=\"syntaxError\">codeOverflow</span>\n            </h1>\n            </div>\n            <div className=\"col\">\n              <div id=\"speech-bubble-container\">\n                <div className=\"speech-bubble\">\n                  <div id=\"left-content\">\n                    <h1 className=\"speech-h1\">\n                      Find the best answer to your technical question, help\n                      others\n                    </h1>\n                    <Link to=\"/signup\">\n                      <button id=\"join-community-button\">\n                        Join the Moringa community\n                      </button>\n                    </Link>\n                    <div id=\"search-content\">\n                      or{\" \"}\n                      <span>\n                        <Link to=\"/questions/\"> search content</Link>\n                      </span>\n                    </div>\n                    <div className=\"speech-bubble-right-corner\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return <QuestionIndex />;\n  }\n};\n\nexport default SplashPage;\n","/home/john/development/frontend-codeOverflow/src/components/QuestionIndexComponent/index.js",["188","189","190","191"],[],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useQueryParam, StringParam } from \"use-query-params\";\nimport { clearQuestions } from \"../../store/questions\";\nimport QuestionItem from \"../QuestionItemComponent\";\nimport { fetchQuestions } from \"../../store/questions\";\nimport Pagination from 'react-rails-pagination';\nimport { getQuestions } from \"../../store/questions\"\nimport './index.css';\n\nconst QuestionIndex = () => {\n  const sessionUser = useSelector(state => state.session.user);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [order, setOrder] = useState(\"Newest\");\n  const questions = useSelector(getQuestions).slice();\n  const [page, setPage] = useQueryParam('page', StringParam);\n  const [search, setSearch] = useQueryParam('search', StringParam);\n  const [tag, setTag] = useQueryParam('tag', StringParam);\n  const [totalPages, setTotalPages] = useState(1);\n  const defaultPage = 1;\n\n  const handleClick = () => {\n    if (sessionUser) {\n      history.push('/questions/ask');\n    } else {\n      history.push('/login');\n    }\n  }\n\n  useEffect(() => {\n    if (page === undefined || page === \"undefined\")\n      setPage(1);\n    dispatch(clearQuestions());\n    dispatch(fetchQuestions(page, order, search, tag))\n      .catch(() => {\n          history.push(\"/NotFound\");\n      });\n  }, [search, tag]);\n\n  useEffect(() => {\n    if (questions.length > 0)\n      setTotalPages(questions[0].totalPages)\n  }, [questions, setTotalPages])\n\n  const mapQuestions = () => (\n    questions.map(question => (\n      <QuestionItem key={question.id} question={question} />\n    ))\n  );\n\n  const handleChangePage = (currentPage) => {\n    setPage(parseInt(currentPage));\n    dispatch(fetchQuestions(currentPage, order, search, tag))\n      .catch(() => {\n        history.push(\"/NotFound\");\n    });\n  };\n\n  const handleChangeOrder = (order) => {\n    setOrder(order);\n    setPage(1)\n    dispatch(fetchQuestions(1, order, search, tag))\n      .catch(() => {\n        history.push(\"/NotFound\");\n    });\n  }\n\n  return (\n    <div className=\"question-index\">\n      <div className=\"question-index-header\">\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div>\n            <h1>{tag !== undefined ? `Questions tagged [${tag}]` : (search !== undefined ? `Search Results` : `${order} Questions`)}</h1>\n            {search !== undefined ? <h4 style={{marginTop: '5px', color: 'gray'}}>Result for {search}</h4> : <h4></h4>}\n          </div>\n          <button onClick={handleClick} className=\"question-index-button\">Ask Question</button>\n        </div>\n        <div className=\"filter-buttons\">\n          {[\"Least Answered\", \"Most Answered\", \"Oldest\", \"Newest\"].map(opt => (\n            <button\n              key={opt}\n              className={order === opt ? \"dark-button\" : \"light-button\"}\n              onClick={() => handleChangeOrder(opt)}\n              style={{height:\"39.59px\", float:\"right\", marginTop:\"5px\"}}\n            >\n              {opt}\n            </button>\n          ))}\n        </div>\n      </div>\n      {mapQuestions()}\n      <div style={{marginLeft:\"50px\"}}>\n        <Pagination page={page ? parseInt(page) : defaultPage } pages={totalPages} handleChangePage={handleChangePage} />\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionIndex;","/home/john/development/frontend-codeOverflow/src/components/QuestionShowComponent/index.js",["192"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteQuestion, getQuestion, fetchAllQuestions } from \"../../store/questions\";\nimport \"./index.css\";\nimport moment from \"moment\";\nimport AnswerForm from \"../AnswerFormComponent\";\nimport AnswerIndex from \"../AnswerIndexComponent\";\nimport Vote from \"../VoteComponent\";\nimport TagsComponent from \"../TagIndexComponent/tags.js\"\n\nconst QuestionShow = () => {\n  window.scrollTo(0, 0);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { questionId } = useParams();\n  const sessionUser = useSelector((state) => state.session.user);\n  const question = useSelector(getQuestion(questionId));\n\n  useEffect(() => {\n    dispatch(fetchAllQuestions())\n      .catch(() => {\n        history.push(\"/NotFound\");\n    });\n  },[dispatch])\n\n  const handleClick = (e) => {\n    if (sessionUser) {\n      history.push(\"/questions/ask\")\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const handleDelete = (e) => {\n    dispatch(deleteQuestion(questionId));\n    history.push(\"/questions\");\n  };\n\n  const dispatchQuestion = () => {\n    dispatch(fetchAllQuestions())\n  }\n\n  return (\n        <div className=\"question-show-content\">\n          { question && \n          <>  \n          <div className=\"title-and-button\">    \n          <h1 className=\"question-title\">{question?.title}</h1>\n            <button\n              onClick={handleClick}\n              className=\"question-show-ask-question-button\"\n            >\n            Ask Question\n            </button>\n          </div>\n          <ul className=\"stats\">\n            <li>\n              Asked <span>{moment(question.createdAt).fromNow()}</span> by{\" \"}\n              <span className=\"displayName\">{question.author}</span>\n            </li>\n          </ul>\n          <hr/>\n          <div className=\"question-show-bottom\" >\n            <Vote key={`question${question.id}`} post={question} sessionUser={sessionUser} isAnswer={false} dispatchPost={dispatchQuestion}/>\n            <div className=\"question-body\">\n              {question.body}\n              <div className=\"question-tags\">\n                <TagsComponent tags={question.tagsAttributes} />\n              </div>\n            </div>\n          </div>\n          {sessionUser && sessionUser.id === question.authorId ? (\n            <div className=\"crud-functions\">\n              <div style={{display:\"flex\"}}>\n                <div className=\"edit-delete\" style={{ marginRight: \"5px\" }}>\n                  <Link to={`/questions/${questionId}/edit`}>Edit</Link>\n                </div>\n                <div className=\"edit-delete\" onClick={handleDelete}>\n                  Delete\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"answer-count\">{question.answerCount} answer{question.answerCount === 1 ? \"\" : \"s\"}</div>\n          <AnswerIndex />\n          {sessionUser ? <AnswerForm questionId={questionId} /> : \"\"}\n          {sessionUser ? (\n            \"\"\n          ) : (\n            <div style={{ marginTop: \"15px\" }}>\n              Please <a href=\"/login\">login</a> to answer\n            </div>\n          )} \n          </>}   \n      </div>\n  );\n};\n\nexport default QuestionShow;","/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/index.js",["193"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './index.css'\nimport { getTags, fetchTags } from \"../../store/tags\";\nimport TagsComponent from \"./tags\"\n\nconst TagIndexComponent = () => {\n    const dispatch = useDispatch();\n    const tags = useSelector(getTags).slice()\n\n    useEffect(() => {\n        dispatch(fetchTags())\n    }, [])\n    return (\n        <>\n            <div className=\"tag-index\">\n                <TagsComponent tags={tags} />\n            </div>\n        </>\n    )\n     \n}\n\nexport default TagIndexComponent","/home/john/development/frontend-codeOverflow/src/components/QuestionFormComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/LeftSidebarComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/AnswerEditFormComponent/index.js",["194"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  useHistory, useParams } from \"react-router-dom\";\nimport { fetchAnswer, getAnswer, updateAnswer } from \"../../store/answers\";\n\nconst AnswerEditForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const sessionUser = useSelector(state => state.session.user);\n    const {answerId}= useParams();\n    const answer = useSelector(getAnswer(answerId));\n    const [description, setDescription] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(fetchAnswer(answerId))\n          .catch(() => {\n            history.push(\"/NotFound\");\n        });\n    },[dispatch])\n\n    useEffect(() => {\n        if (answer) {\n            setDescription(answer.description);\n        }\n    }, [answer]);\n\n    if(!sessionUser) history.push('/login');\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        dispatch(updateAnswer({\n            answer: {\n                description: description,\n                id: answer.id,\n                editorId: answer.answererId,\n                answererId: answer.answererId,\n            }\n        }))\n        history.push(`/questions/${answer.questionId}`);\n    };\n    if(answer){\n        return(\n            <div className=\"container\">\n            <div id=\"content\">\n                <div className='header'>\n                    <div className=\"headline\">Edit a public answer</div>\n                </div>\n                <div>\n                    <div style={{marginBottom:\"5px\"}}>Question: {answer.title}</div>\n                    <form id=\"question-form\">\n                        <div className=\"body-box\">\n                            <textarea onChange={e => setDescription(e.target.value)} value={description}>\n                            </textarea>\n                        </div>\n                    </form>\n                </div>\n                <button className=\"submit-question\" onClick={handleSubmit}>Update Answer</button>\n            </div>\n        </div>   \n        )\n    }\n};\n\nexport default AnswerEditForm;","/home/john/development/frontend-codeOverflow/src/components/QuestionEditFormComponent/index.js",["195"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  useHistory, useParams } from \"react-router-dom\";\nimport { getQuestion, updateQuestion, fetchQuestions, fetchQuestion } from \"../../store/questions\";\n\nconst QuestionEditForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {questionId} = useParams();\n    const [tags, setTags] = useState([]);\n    const sessionUser = useSelector(state => state.session.user);\n    const question = useSelector(getQuestion(questionId));\n    const now = new Date();\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n\n    useEffect(() => {\n      dispatch(fetchQuestion(questionId))\n        .catch(() => {\n          history.push(\"/NotFound\");\n      });\n    },[dispatch])\n\n    useEffect(() => {\n        if (question) {\n            setTitle(question.title);\n            setBody(question.body);\n            setTags(question.tagsAttributes.map((tag => {return tag.name})));\n        }\n    }, [question]);\n\n    if(!sessionUser) history.push('/login');\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        dispatch(updateQuestion({\n            question: {\n                id: question.id,\n                title: title,\n                body: body,\n                authorId: question.authorId,\n                editorId: sessionUser.id,\n                updatedAt: now,\n            },\n            tags: tags\n        }))\n        dispatch(fetchQuestions());\n        history.push(`/questions/${question.id}`);\n    };\n\n    const handleKeyDown = (e) => {\n        if(e.code !== 'Space') return\n        const value = e.target.value.trim();\n        if(!value.trim()) return\n        setTags([...tags, value])\n        e.target.value = '';\n    };\n\n    const removeTag = (index) => {\n        setTags(tags.filter((el, i) => i !== index))\n    }\n\n    if(question) {\n        return(\n            <>\n                <div className=\"container\">\n                    <div id=\"content\">\n                        <div className='header'>\n                            <div className=\"headline\">Edit a public question</div>\n                        </div>\n                        <div className=\"question-and-draft\">\n                            <form id=\"question-form\">\n                                <div className=\"title-box\">\n                                    <label className=\"title label\">\n                                        Title\n                                    </label>\n                                    <p className=\"title-text\">\n                                        Be Specific and imagine you're asking a question to another person\n                                    </p>\n                                    <input className=\"input-form\" onChange={e => setTitle(e.target.value)} placeholder=\"e.g Is there an R function for finding the index of an element in a vector?\" value={title}></input>\n                                </div>\n                                <div className=\"body-box\">\n                                    <label className=\"body label\">\n                                        Body\n                                    </label>\n                                    <div className=\"body-text\">\n                                        Include all the information someone would need to answer your question\n                                    </div>\n                                    <textarea value={body} onChange={e => setBody(e.target.value)}>\n                                    </textarea>\n                                </div>\n\n                                <div className=\"label-box\">\n                                    <label className=\"tags label\">\n                                        Tags\n                                    </label>\n                                    <p className=\"label-text\">\n                                        Add up to 5 tags to describe what your question is about.\n                                    </p>\n                                    <div className=\"tags-input-container\"> \n                                    {tags.map((tag,index) => (\n                                        <div className=\"tag-item\" key={index}>\n                                            <span className=\"tag-text\">{tag}</span>\n                                            <span className=\"tag-close\" onClick={() => removeTag(index)}>&times;</span>\n                                        </div>\n                                    ))}\n                                    <input className=\"tags-input\" onKeyDown={handleKeyDown}placeholder=\"e.g. (ruby, javascript, cors, react)\"></input>\n                                    </div>\n                                </div>\n                            </form>\n\n                            <aside className=\"steps-container\">\n                                <div className=\"steps-title\">\n                                    Draft your question\n                                </div>\n                                <div className=\"steps\">\n                                    <div className=\"steps-info\">\n                                        <p>\n                                            The community is here to help you with\n                                            specific coding, algorithm, or language\n                                            problems.\n                                        </p>\n                                        <br />\n                                        <p>Avoid asking opinion-based questions.</p>\n                                    </div>\n                                    <ul className=\"instructions\">\n                                        <li>\n                                            <span className=\"number\">1.</span>\n                                            <span className=\"step-text\"> Summarize the problem.</span>\n                                        </li>\n                                        <li>\n                                            <span className=\"number\">2.</span>\n                                            <span className=\"step-text\"> Describe what you've tried.</span>\n                                        </li>\n                                        <li>\n                                            <span className=\"number\">3.</span> \n                                            <span className=\"step-text\"> Show some code.</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </aside>\n\n                        </div>\n                        <button className=\"submit-question\" onClick={handleSubmit}>Update Question</button>\n                    </div>\n                </div>     \n            </>\n        )\n    }\n};\n\nexport default QuestionEditForm;","/home/john/development/frontend-codeOverflow/src/components/Footer/index.js",["196","197","198","199","200"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../../images/logo.png'\nimport './index.css';\n\nconst Footer = () => {\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0, \n            behavior: 'smooth'\n          });\n    }\n    return (\n        <footer>\n            <div className=\"footer-container\">\n                <div className=\"footer-left\">\n                    <div className=\"navigation\">\n                        <a className=\"main\" onClick={scrollToTop}>\n                            <Link to=\"/\" className=\"nav-logo\">\n                            <img className=\"codeOverflow-logo-img\" src={logo} alt=\"codeOverflow\" />\n                            <h1 className=\"codeOverflow-logo-text-footer\">codeOverflow</h1>\n                            </Link>\n                        </a>\n                        <ul> \n                            <Link to=\"/questions\">\n                                <li>FAQ</li>\n                            </Link>\n                            <a href=\"https://stackoverflow.com/help\" target=\"_blank\">\n                                <li>Help</li>\n                            </a>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"footer-right\">\n                    <div className=\"navigation\">\n                        <ul>\n                            <a href=\"\" target=\"_blank\">\n                                <li>Github</li>\n                            </a>\n                            <a href=\"\" target=\"_blank\">\n                                <li>LinkedIn</li>\n                            </a>\n                            <a href=\"\" target=\"_blank\">\n                                <li>Twitter</li>\n                            </a>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","/home/john/development/frontend-codeOverflow/src/components/PageNotFound/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/tags.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/PageNotFound/notpagefound.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/QuestionItemComponent/index.js",["201"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport { fetchUser } from \"../../store/users\";\nimport './index.css'\nimport moment from 'moment';\nimport TagsComponent from \"../TagIndexComponent/tags.js\"\n\nconst QuestionItem = ({question}) => {\n    const { id, title, body, authorId, createdAt } = question;\n    const dispatch = useDispatch();\n\n    const initialVotes = (question && question.votesAttributes) ? question.votesAttributes.map((vote) => {return vote.vote ? 1 : -1}).reduce((vote, current) => vote + current, 0) : 0\n    \n    useEffect(() => {\n        dispatch(fetchUser(authorId));\n    },[]);\n\n    const getBody = (body) => {\n        return body.split(/\\s+/).slice(0,10).join(\" \");\n    }\n\n    const dateTimeAgo = moment(createdAt).fromNow();\n\n    return(\n            <div className=\"question-container\">\n                <div className=\"question-stats\">\n                    <div className=\"question-index-votes\">{initialVotes === 1 ? initialVotes + \" vote\" : initialVotes + \" votes\"}</div>\n                    <div className=\"question-index-answers\">{question.answerCount === 1 ? question.answerCount + \" answer\" : question.answerCount + \" answers\"}</div>\n                </div>\n                <div className=\"question-content-summary\">\n                    <Link to={`/questions/${id}`}> <h3 className=\"question-listing-title\">{title}</h3></Link>\n                    <div className=\"question-content-summary-body\">{getBody(body)} ...</div>\n                    <div className=\"tags-content-summary\">\n                        <TagsComponent tags={question?.tagsAttributes} />\n                    </div>\n                    <div className=\"question-content-summary-bottom-user-card\"><div>{question.author} asked {dateTimeAgo}</div> <div className=\"editor\">{}</div></div>\n                </div>\n            </div>\n        )\n}\n\nexport default QuestionItem;","/home/john/development/frontend-codeOverflow/src/components/VoteComponent/index.js",["202"],[],"import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeVote, downVote } from \"../../store/votes\";\nimport { ReactComponent as GrayUpArrow } from './svgs/gray-up-arrow.svg';\nimport { ReactComponent as OrangeUpArrow } from './svgs/orange-up-arrow.svg';\nimport { ReactComponent as GrayDownArrow } from './svgs/gray-down-arrow.svg';\nimport { ReactComponent as OrangeDownArrow } from './svgs/orange-down-arrow.svg';\n\n\nconst Vote = ({post, sessionUser, isAnswer, dispatchPost}) => {\n    const dispatch = useDispatch();\n    const votes = post.votesAttributes;\n\n    const initialVotes = votes ? votes.map((vote) => {return vote.vote ? 1 : -1}).reduce((vote, current) => vote + current, 0) : 0\n    const initialVoters = votes ? votes.map((vote) => {return vote.voterId}) : []\n    let initialVote = \"\"\n\n    const [voteCount, setVoteCount] = useState()\n    const [voters, setVoters] = useState([])\n    const [vote, setVote] = useState(\"\");\n\n    if(sessionUser && votes){\n        for(let i = 0; i < votes.length; i++){\n            if(sessionUser.id === votes[i].voterId) initialVote = votes[i].vote;\n        }\n    }\n\n    useEffect(() => {\n        setVoteCount(initialVotes)\n        setVoters(initialVoters)\n        setVote(initialVote)\n\n    }, [initialVote, initialVotes])\n\n\n    const handleClickGray = (bool) => {\n        if(!sessionUser){return alert(\"You must be logged in to vote\")}\n\n        if(sessionUser.id === post?.authorId || (isAnswer && sessionUser.id === post?.answererId)) {\n            return alert(\"You cannot vote on your own post\")\n        }\n        const has_user_voted = voters.includes(sessionUser.id)\n        const user_id = sessionUser.id\n\n        if(has_user_voted) {\n            for (const v of Object.values(votes || {})) {\n                if(v.voterId === sessionUser.id) {\n                    dispatch(downVote(v.id, dispatchPost))\n                }\n            }\n            setVote(\"\")\n            setVoters(voters.filter(v => v !== user_id))\n        }\n        dispatch(makeVote(sessionUser.id, post.id, bool, isAnswer, dispatchPost));\n        setVote(bool)\n        setVoters([...voters, user_id])\n        if(bool){\n            setVoteCount(voteCount + 1)\n        }else{\n            setVoteCount(voteCount - 1)\n        }\n    }\n\n\n    const handleClickOrange = (bool) => {\n        // if(sessionUser.id === post?.authorId || sessionUser.id === post?.answererId) {return}\n        // if(!sessionUser){return alert(\"You must be logged in to vote\")}\n        const user_id = sessionUser.id\n\n        for (const v of Object.values(votes || {})) {\n            if(v.voterId === sessionUser.id) {\n                dispatch(downVote(v.id, dispatchPost))\n            }\n        }\n        setVote(\"\")\n        setVoters(voters.filter(v => v !== user_id))\n\n        if(bool){\n            setVoteCount(voteCount + 1)\n        }else{\n            setVoteCount(voteCount - 1)\n        }\n    }\n\n\n    return(\n        <div className=\"vote-container\" key={isAnswer ? `answer${post.id}` : `question${post.id}`}>\n            {sessionUser && votes && voters.includes(sessionUser.id) && vote ? <OrangeUpArrow onClick={() => handleClickOrange(false)}/> : <GrayUpArrow onClick={() => handleClickGray(true)}/>}\n            <h1 className=\"vote-count\">{voteCount}</h1>\n            {sessionUser && votes && voters.includes(sessionUser.id) && !vote ? <OrangeDownArrow onClick={() => handleClickOrange(true)}/> : <GrayDownArrow onClick={() => handleClickGray(false)}/>}\n        </div>\n    )\n}\n\nexport default Vote;","/home/john/development/frontend-codeOverflow/src/components/AnswerFormComponent/index.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/AnswerIndexComponent/index.js",["203","204"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchAnswers, getAnswers } from \"../../store/answers\";\nimport AnswerItem from \"../AnswerItemComponent\";\n\nconst AnswerIndex = () => {\n    const {questionId} = useParams();\n    const filteredAnswers = [];\n    const dispatch = useDispatch();\n    let answers = useSelector(getAnswers).slice();\n\n    answers.filter(answer => {\n        if(parseInt(answer.questionId) === parseInt(questionId)){\n            filteredAnswers.push(answer);\n        }\n    })\n\n    useEffect(() => {\n        dispatch(fetchAnswers())\n    }, []);\n\n\n    const mapAnswers = () => {\n        return filteredAnswers.map(answer => (\n            <AnswerItem key={answer.id} answer={answer}/>\n        ))\n    };\n        return(\n            <>  \n            <div>\n                {mapAnswers()}\n            </div>\n            </>\n        )\n};\n\nexport default AnswerIndex;","/home/john/development/frontend-codeOverflow/src/components/TagIndexComponent/tag.js",[],[],"/home/john/development/frontend-codeOverflow/src/store/votes.js",[],[],"/home/john/development/frontend-codeOverflow/src/components/AnswerItemComponent/index.js",[],[],{"ruleId":"205","severity":1,"message":"206","line":4,"column":26,"nodeType":"207","messageId":"208","endLine":4,"endColumn":36},{"ruleId":"205","severity":1,"message":"209","line":4,"column":38,"nodeType":"207","messageId":"208","endLine":4,"endColumn":49},{"ruleId":"205","severity":1,"message":"210","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":16},{"ruleId":"205","severity":1,"message":"211","line":71,"column":9,"nodeType":"207","messageId":"208","endLine":71,"endColumn":19},{"ruleId":"205","severity":1,"message":"212","line":1,"column":28,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"213","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"205","severity":1,"message":"214","line":6,"column":19,"nodeType":"207","messageId":"208","endLine":6,"endColumn":31},{"ruleId":"205","severity":1,"message":"215","line":6,"column":33,"nodeType":"207","messageId":"208","endLine":6,"endColumn":40},{"ruleId":"205","severity":1,"message":"216","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":16},{"ruleId":"205","severity":1,"message":"217","line":7,"column":18,"nodeType":"207","messageId":"208","endLine":7,"endColumn":25},{"ruleId":"205","severity":1,"message":"218","line":19,"column":18,"nodeType":"207","messageId":"208","endLine":19,"endColumn":27},{"ruleId":"205","severity":1,"message":"219","line":20,"column":15,"nodeType":"207","messageId":"208","endLine":20,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":40,"column":6,"nodeType":"222","endLine":40,"endColumn":19,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":76,"column":110,"nodeType":"226","endLine":76,"endColumn":114},{"ruleId":"220","severity":1,"message":"227","line":25,"column":5,"nodeType":"222","endLine":25,"endColumn":15,"suggestions":"228"},{"ruleId":"220","severity":1,"message":"229","line":13,"column":8,"nodeType":"222","endLine":13,"endColumn":10,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":19,"column":7,"nodeType":"222","endLine":19,"endColumn":17,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"233","line":22,"column":7,"nodeType":"222","endLine":22,"endColumn":17,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":18,"column":25,"nodeType":"226","endLine":18,"endColumn":67},{"ruleId":"237","severity":1,"message":"238","line":28,"column":29,"nodeType":"226","messageId":"239","endLine":28,"endColumn":86,"fix":"240"},{"ruleId":"235","severity":1,"message":"241","line":37,"column":29,"nodeType":"226","endLine":37,"endColumn":56},{"ruleId":"235","severity":1,"message":"241","line":40,"column":29,"nodeType":"226","endLine":40,"endColumn":56},{"ruleId":"235","severity":1,"message":"241","line":43,"column":29,"nodeType":"226","endLine":43,"endColumn":56},{"ruleId":"220","severity":1,"message":"242","line":17,"column":7,"nodeType":"222","endLine":17,"endColumn":9,"suggestions":"243"},{"ruleId":"220","severity":1,"message":"244","line":33,"column":8,"nodeType":"222","endLine":33,"endColumn":35,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":13,"column":27,"nodeType":"248","messageId":"249","endLine":13,"endColumn":29},{"ruleId":"220","severity":1,"message":"229","line":21,"column":8,"nodeType":"222","endLine":21,"endColumn":10,"suggestions":"250"},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'useRef' is defined but never used.","'handleDemo' is assigned a value but never used.","'useState' is defined but never used.","'SiRedux' is defined but never used.","'SiPostgresql' is defined but never used.","'SiReact' is defined but never used.","'DiRuby' is defined but never used.","'DiReact' is defined but never used.","'setSearch' is assigned a value but never used.","'setTag' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order', 'page', and 'setPage'. Either include them or remove the dependency array.","ArrayExpression",["251"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'answerId' and 'history'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'history' and 'questionId'. Either include them or remove the dependency array.",["255"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"256","text":"257"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'authorId' and 'dispatch'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'initialVoters'. Either include it or remove the dependency array.",["259"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["260"],{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},[1090,1090]," rel=\"noreferrer\"",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"265","fix":"275"},"Update the dependencies array to be: [dispatch, history, order, page, search, setPage, tag]",{"range":"276","text":"277"},"Update the dependencies array to be: [dispatch, history]",{"range":"278","text":"279"},"Update the dependencies array to be: [dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [answerId, dispatch, history]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch, history, questionId]",{"range":"284","text":"285"},"Update the dependencies array to be: [authorId, dispatch]",{"range":"286","text":"287"},"Update the dependencies array to be: [initialVote, initialVoters, initialVotes]",{"range":"288","text":"289"},{"range":"290","text":"281"},[1425,1438],"[dispatch, history, order, page, search, setPage, tag]",[900,910],"[dispatch, history]",[386,388],"[dispatch]",[700,710],"[answerId, dispatch, history]",[831,841],"[dispatch, history, questionId]",[673,675],"[authorId, dispatch]",[1277,1304],"[initialVote, initialVoters, initialVotes]",[663,665]]