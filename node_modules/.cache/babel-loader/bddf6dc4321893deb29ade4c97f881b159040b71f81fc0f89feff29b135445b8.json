{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport answersReducer from './answers';\nimport questionsReducer from './questions';\nimport sessionReducer from './session';\nimport tagsReducer from './tags';\nimport usersReducer from './users';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  users: usersReducer,\n  questions: questionsReducer,\n  answers: answersReducer,\n  tags: tagsReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","answersReducer","questionsReducer","sessionReducer","tagsReducer","usersReducer","rootReducer","session","users","questions","answers","tags","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/home/remmy/Documents/Development/code/phase-5/CodeOverflow/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport answersReducer from './answers';\nimport questionsReducer from './questions';\nimport sessionReducer from './session';\nimport tagsReducer from './tags';\nimport usersReducer from './users';\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  users: usersReducer,\n  questions: questionsReducer,\n  answers: answersReducer,\n  tags: tagsReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n}\n\nexport default configureStore;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,gBAAgB,MAAM,aAAa;AAC1C,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,WAAW,MAAM,QAAQ;AAChC,OAAOC,YAAY,MAAM,SAAS;AAElC,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAClCU,OAAO,EAAEJ,cAAc;EACvBK,KAAK,EAAEH,YAAY;EACnBI,SAAS,EAAEP,gBAAgB;EAC3BQ,OAAO,EAAET,cAAc;EACvBU,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,IAAIQ,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGd,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMgB,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAItB,OAAO;EACxDa,QAAQ,GAAGO,gBAAgB,CAACrB,eAAe,CAACE,KAAK,EAAEgB,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAO3B,WAAW,CAACU,WAAW,EAAEiB,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}