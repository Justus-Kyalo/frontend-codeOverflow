{"ast":null,"code":"var _jsxFileName = \"/home/john/development/frontend/src/components/AnswerFormComponent/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAnswers } from \"../../store/answers\";\nimport { fetchAllQuestions } from \"../../store/questions\";\nimport csrfFetch from \"../../store/csrf\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerForm = _ref => {\n  _s();\n  let {\n    questionId\n  } = _ref;\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState();\n  const author = useSelector(state => state.session.user);\n  const handleClick = async e => {\n    e.preventDefault();\n    const answer = {\n      answerer_id: author.id,\n      description: description,\n      question_id: questionId\n    };\n    const res = await csrfFetch('/api/answers', {\n      method: 'POST',\n      body: JSON.stringify(answer)\n    });\n    if (res.ok) {\n      await res.json();\n      dispatch(fetchAnswers());\n      dispatch(fetchAllQuestions());\n      setDescription(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"answer-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"your-answer\",\n      children: \"Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setDescription(e.target.value),\n      id: \"\",\n      cols: \"30\",\n      rows: \"10\",\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button post-answer-button\",\n      onClick: handleClick,\n      children: \"Post Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerForm, \"bFda5TmxBD+m7twQpXpThSSDAH8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","fetchAnswers","fetchAllQuestions","csrfFetch","jsxDEV","_jsxDEV","AnswerForm","_ref","_s","questionId","dispatch","description","setDescription","author","state","session","user","handleClick","e","preventDefault","answer","answerer_id","id","question_id","res","method","body","JSON","stringify","ok","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","cols","rows","onClick","_c","$RefreshReg$"],"sources":["/home/john/development/frontend/src/components/AnswerFormComponent/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAnswers } from \"../../store/answers\";\nimport { fetchAllQuestions } from \"../../store/questions\";\nimport csrfFetch from \"../../store/csrf\";\nimport './index.css'\n\nconst AnswerForm = ({questionId}) => {\n    const dispatch = useDispatch();\n    const [description, setDescription] = useState();\n    const author = useSelector(state => state.session.user);   \n\n    const handleClick = async e => {\n        e.preventDefault();\n        const answer = {answerer_id: author.id, description: description, question_id: questionId};\n        const res = await csrfFetch('/api/answers', {\n            method: 'POST',\n            body: JSON.stringify(answer)\n        });\n        if (res.ok){\n            await res.json();\n            dispatch(fetchAnswers());\n            dispatch(fetchAllQuestions())\n            setDescription(\"\");\n        } \n    };\n\n    return(\n        <form className=\"answer-form-container\">\n            <h2 id=\"your-answer\">Your Answer</h2>\n            <textarea onChange={e => setDescription(e.target.value)} id=\"\" cols=\"30\" rows=\"10\" value={description}></textarea>\n            <button className=\"login-button post-answer-button\" onClick={handleClick}>Post Your Answer</button>\n        </form>\n    )\n};\n\nexport default AnswerForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,UAAU,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAACC;EAAU,CAAC,GAAAF,IAAA;EAC5B,MAAMG,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,EAAE;EAChD,MAAMe,MAAM,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;EAEvD,MAAMC,WAAW,GAAG,MAAMC,CAAC,IAAI;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,MAAM,GAAG;MAACC,WAAW,EAAER,MAAM,CAACS,EAAE;MAAEX,WAAW,EAAEA,WAAW;MAAEY,WAAW,EAAEd;IAAU,CAAC;IAC1F,MAAMe,GAAG,GAAG,MAAMrB,SAAS,CAAC,cAAc,EAAE;MACxCsB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,MAAM;IAC/B,CAAC,CAAC;IACF,IAAII,GAAG,CAACK,EAAE,EAAC;MACP,MAAML,GAAG,CAACM,IAAI,EAAE;MAChBpB,QAAQ,CAACT,YAAY,EAAE,CAAC;MACxBS,QAAQ,CAACR,iBAAiB,EAAE,CAAC;MAC7BU,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAM0B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACnC3B,OAAA;MAAIiB,EAAE,EAAC,aAAa;MAAAU,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrC/B,OAAA;MAAUgC,QAAQ,EAAEnB,CAAC,IAAIN,cAAc,CAACM,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAE;MAACjB,EAAE,EAAC,EAAE;MAACkB,IAAI,EAAC,IAAI;MAACC,IAAI,EAAC,IAAI;MAACF,KAAK,EAAE5B;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY,eAClH/B,OAAA;MAAQ0B,SAAS,EAAC,iCAAiC;MAACW,OAAO,EAAEzB,WAAY;MAAAe,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChG;AAEf,CAAC;AAAC5B,EAAA,CA3BIF,UAAU;EAAA,QACKP,WAAW,EAEbC,WAAW;AAAA;AAAA2C,EAAA,GAHxBrC,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}