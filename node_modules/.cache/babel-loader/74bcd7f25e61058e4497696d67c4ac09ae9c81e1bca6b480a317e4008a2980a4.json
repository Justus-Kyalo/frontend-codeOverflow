{"ast":null,"code":"import useQueryParams from \"./useQueryParams\";\nconst QueryParams = _ref => {\n  let {\n    config,\n    children\n  } = _ref;\n  const [query, setQuery] = useQueryParams(config);\n  return children({\n    query,\n    setQuery\n  });\n};\nvar QueryParams_default = QueryParams;\nexport { QueryParams, QueryParams_default as default };","map":{"version":3,"names":["useQueryParams","QueryParams","_ref","config","children","query","setQuery","QueryParams_default"],"sources":["/home/john/development/frontend-codeOverflow/node_modules/use-query-params/src/QueryParams.tsx"],"sourcesContent":["import { QueryParamConfigMap, DecodedValueMap } from 'serialize-query-params';\nimport useQueryParams from './useQueryParams';\nimport { SetQuery } from './types';\n\nexport interface QueryRenderProps<QPCMap extends QueryParamConfigMap> {\n  query: DecodedValueMap<QPCMap>;\n  setQuery: SetQuery<QPCMap>;\n}\n\nexport interface QueryParamsProps<QPCMap extends QueryParamConfigMap> {\n  config: QPCMap;\n  children: (renderProps: QueryRenderProps<QPCMap>) => JSX.Element;\n}\n\nexport const QueryParams = <QPCMap extends QueryParamConfigMap>({\n  config,\n  children,\n}: QueryParamsProps<QPCMap>) => {\n  const [query, setQuery] = useQueryParams(config);\n  return children({ query, setQuery });\n};\n\nexport default QueryParams;\n"],"mappings":"AACA,OAAOA,cAAA,MAAoB;AAapB,MAAMC,WAAA,GAAcC,IAAA,IAGK;EAAA,IAHgC;IAC9DC,MAAA;IACAC;EACF,IAAAF,IAAA;EACE,MAAM,CAACG,KAAA,EAAOC,QAAQ,IAAIN,cAAA,CAAeG,MAAM;EAC/C,OAAOC,QAAA,CAAS;IAAEC,KAAA;IAAOC;EAAS,CAAC;AACrC;AAEA,IAAOC,mBAAA,GAAQN,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}