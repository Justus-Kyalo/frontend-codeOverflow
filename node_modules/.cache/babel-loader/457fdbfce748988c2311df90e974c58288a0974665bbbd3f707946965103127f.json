{"ast":null,"code":"import csrfFetch from \"./csrf\";\nexport const RECEIVE_QUESTIONS = \"questions/RECEIVE_QUESTIONS\";\nexport const RECEIVE_QUESTION = \"questions/RECEIVE_QUESTION\";\nexport const REMOVE_QUESTION = \"questions/REMOVE_QUESTION\";\nconst CLEAR_QUESTIONS = 'questions/CLEAR_QUESTIONS';\nexport const receiveQuestions = questions => ({\n  type: RECEIVE_QUESTIONS,\n  questions\n});\nexport const receiveQuestion = question => ({\n  type: RECEIVE_QUESTION,\n  question\n});\nexport const removeQuestion = questionId => ({\n  type: REMOVE_QUESTION,\n  questionId\n});\nexport const clearQuestions = () => ({\n  type: CLEAR_QUESTIONS\n});\nexport const getQuestion = questionId => _ref => {\n  let {\n    questions\n  } = _ref;\n  return questions ? Object.values(questions).find(question => question.id === parseInt(questionId)) : null;\n};\nexport const getQuestions = _ref2 => {\n  let {\n    questions\n  } = _ref2;\n  return questions ? Object.values(questions) : [];\n};\nexport const fetchQuestion = questionId => async dispatch => {\n  const res = await csrfFetch(`/api/questions/${questionId}`);\n  const data = await res.json();\n  dispatch(receiveQuestion(data.question));\n};\nexport const fetchQuestions = (page, order, search, tag) => async dispatch => {\n  const res = await csrfFetch(`/api/questions?page=${page}&&order=${order}&&search=${search}&&tag=${tag}`);\n  const data = await res.json();\n  dispatch(receiveQuestions(data));\n};\nexport const fetchAllQuestions = () => async dispatch => {\n  const res = await csrfFetch(`/api/questions?all=true`);\n  const data = await res.json();\n  dispatch(receiveQuestions(data));\n};\nexport const deleteQuestion = questionId => async dispatch => {\n  await csrfFetch(`/api/questions/${questionId}`, {\n    method: \"DELETE\"\n  });\n  dispatch(removeQuestion(questionId));\n};\nexport const updateQuestion = question => async dispatch => {\n  const res = await csrfFetch(`/api/questions/${question.id}`, {\n    method: 'PUT',\n    body: JSON.stringify(question),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await res.json();\n  dispatch(receiveQuestion(data.question));\n};\nconst questionsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  Object.freeze(state);\n  const nextState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...action.questions\n      };\n    case RECEIVE_QUESTION:\n      nextState[action.question.id] = action.question;\n      return nextState;\n    case REMOVE_QUESTION:\n      delete nextState[action.questionId];\n      return nextState;\n    case CLEAR_QUESTIONS:\n      return {};\n    default:\n      return state;\n  }\n};\nexport default questionsReducer;","map":{"version":3,"names":["csrfFetch","RECEIVE_QUESTIONS","RECEIVE_QUESTION","REMOVE_QUESTION","CLEAR_QUESTIONS","receiveQuestions","questions","type","receiveQuestion","question","removeQuestion","questionId","clearQuestions","getQuestion","_ref","Object","values","find","id","parseInt","getQuestions","_ref2","fetchQuestion","dispatch","res","data","json","fetchQuestions","page","order","search","tag","fetchAllQuestions","deleteQuestion","method","updateQuestion","body","JSON","stringify","headers","questionsReducer","state","arguments","length","undefined","action","freeze","nextState"],"sources":["/home/john/development/frontend/src/store/questions.js"],"sourcesContent":["import csrfFetch from \"./csrf\";\n\nexport const RECEIVE_QUESTIONS = \"questions/RECEIVE_QUESTIONS\";\nexport const RECEIVE_QUESTION = \"questions/RECEIVE_QUESTION\";\nexport const REMOVE_QUESTION = \"questions/REMOVE_QUESTION\";\nconst CLEAR_QUESTIONS = 'questions/CLEAR_QUESTIONS';\n\nexport const receiveQuestions = questions => ({\n    type: RECEIVE_QUESTIONS,\n    questions\n});\n\nexport const receiveQuestion = question => ({\n    type: RECEIVE_QUESTION,\n    question\n});\n\nexport const removeQuestion = questionId => ({\n    type: REMOVE_QUESTION,\n    questionId\n});\n\nexport const clearQuestions = () => ({\n    type: CLEAR_QUESTIONS\n});\n\nexport const getQuestion = questionId => ({questions}) => questions ? Object.values(questions).find(question => question.id === parseInt(questionId)) : null;\nexport const getQuestions = ({questions}) => questions ? Object.values(questions) : [];\n\nexport const fetchQuestion = questionId => async dispatch => {\n    const res = await csrfFetch(`/api/questions/${questionId}`);\n    const data = await res.json();\n    dispatch(receiveQuestion(data.question));\n};\n\nexport const fetchQuestions = (page, order, search, tag) => async dispatch => {\n    const res = await csrfFetch(`/api/questions?page=${page}&&order=${order}&&search=${search}&&tag=${tag}`);\n    const data = await res.json();\n    dispatch(receiveQuestions(data));\n};\n\nexport const fetchAllQuestions = () => async dispatch => {\n    const res = await csrfFetch(`/api/questions?all=true`);\n    const data = await res.json();\n    dispatch(receiveQuestions(data));\n};\n\nexport const deleteQuestion = questionId => async dispatch => {\n    await csrfFetch(`/api/questions/${questionId}`, {method: \"DELETE\"});\n    dispatch(removeQuestion(questionId));\n};\n\nexport const updateQuestion = question => async dispatch => {\n    const res = await csrfFetch(`/api/questions/${question.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(question),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch(receiveQuestion(data.question));\n  };\n  \nconst questionsReducer = (state= {}, action) => {\n    Object.freeze(state);\n    const nextState = {...state};\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {...action.questions};\n        case RECEIVE_QUESTION:\n            nextState[action.question.id] = action.question;\n            return nextState;\n        case REMOVE_QUESTION:\n            delete nextState[action.questionId];\n            return nextState;\n        case CLEAR_QUESTIONS:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport default questionsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}