{"ast":null,"code":"export default async function csrfFetch(url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.headers ||= {};\n  options.method ||= 'GET';\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] ||= 'application/json';\n    options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n  }\n  const res = await fetch(url, options);\n  if (res.status >= 400) throw res;\n  return res;\n}","map":{"version":3,"names":["csrfFetch","url","options","arguments","length","undefined","headers","method","toUpperCase","sessionStorage","getItem","res","fetch","status"],"sources":["/home/john/development/frontend/src/store/csrf.js"],"sourcesContent":["export default async function csrfFetch(url, options = {}) {\n    options.headers ||= {};\n    options.method ||= 'GET';\n  \n    if (options.method.toUpperCase() !== 'GET') {\n      options.headers['Content-Type'] ||= 'application/json';\n      options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n    }\n    const res = await fetch(url, options);\n    if (res.status >= 400) throw res;\n    return res;\n}"],"mappings":"AAAA,eAAe,eAAeA,SAASA,CAACC,GAAG,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACrDD,OAAO,CAACI,OAAO,KAAK,CAAC,CAAC;EACtBJ,OAAO,CAACK,MAAM,KAAK,KAAK;EAExB,IAAIL,OAAO,CAACK,MAAM,CAACC,WAAW,EAAE,KAAK,KAAK,EAAE;IAC1CN,OAAO,CAACI,OAAO,CAAC,cAAc,CAAC,KAAK,kBAAkB;IACtDJ,OAAO,CAACI,OAAO,CAAC,cAAc,CAAC,GAAGG,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;EAC1E;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAEC,OAAO,CAAC;EACrC,IAAIS,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE,MAAMF,GAAG;EAChC,OAAOA,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}