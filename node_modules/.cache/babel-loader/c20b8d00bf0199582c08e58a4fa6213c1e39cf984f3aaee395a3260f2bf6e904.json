{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst MAKE_VOTE = '/api/votes';\nconst RECEIVE_VOTE = \"RECEIVE_VOTE\";\nconst REMOVE_VOTE = \"REMOVE_VOTE\";\nexport const makeVote = (voterId, postId, vote, type, dispatchPost) => async dispatch => {\n  const res = await csrfFetch(MAKE_VOTE, {\n    method: 'POST',\n    body: JSON.stringify({\n      vote: {\n        voterId: voterId,\n        postId: postId,\n        vote: vote,\n        postType: type\n      }\n    })\n  });\n  let data = await res.json();\n  if (!data.errors) {\n    dispatch({\n      type: RECEIVE_VOTE,\n      vote: data.vote\n    });\n    dispatchPost();\n    return res;\n  } else {\n    throw data;\n  }\n};\nexport const downVote = (voteId, dispatchPost) => async dispatch => {\n  const res = await csrfFetch(`/api/votes/${voteId}`, {\n    method: 'DELETE'\n  });\n  let data = await res.json();\n  if (!data.errors) {\n    dispatch({\n      type: REMOVE_VOTE,\n      voteId: voteId\n    });\n    dispatchPost();\n    return res;\n  } else {\n    throw data;\n  }\n};","map":{"version":3,"names":["csrfFetch","MAKE_VOTE","RECEIVE_VOTE","REMOVE_VOTE","makeVote","voterId","postId","vote","type","dispatchPost","dispatch","res","method","body","JSON","stringify","postType","data","json","errors","downVote","voteId"],"sources":["/home/remmy/Documents/Development/code/phase-5/frontend-codeOverflow/src/store/votes.js"],"sourcesContent":["import csrfFetch from \"./csrf\"\n\nconst MAKE_VOTE = '/api/votes';\nconst RECEIVE_VOTE = \"RECEIVE_VOTE\";\nconst REMOVE_VOTE = \"REMOVE_VOTE\";\n\nexport const makeVote = (voterId, postId, vote, type, dispatchPost) => async(dispatch) => {\n    const res = await csrfFetch( MAKE_VOTE, {\n        method: 'POST',\n        body: JSON.stringify({vote: {voterId: voterId, postId: postId, vote: vote, postType: type}})\n    });\n\n    let data = await res.json();\n\n    if(!data.errors){\n        dispatch({type: RECEIVE_VOTE, vote: data.vote })\n        dispatchPost()\n        return res;\n    } else {\n        throw data;\n    }\n}\n\nexport const downVote = (voteId, dispatchPost) => async(dispatch) => {\n    const res = await csrfFetch( `/api/votes/${voteId}`, {\n        method: 'DELETE'\n    });\n\n    let data = await res.json();\n\n    if(!data.errors){\n        dispatch({type: REMOVE_VOTE, voteId: voteId});\n        dispatchPost()\n        return res;\n    } else {\n        throw data;\n    }\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,SAAS,GAAG,YAAY;AAC9B,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,WAAW,GAAG,aAAa;AAEjC,OAAO,MAAMC,QAAQ,GAAGA,CAACC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,YAAY,KAAK,MAAMC,QAAQ,IAAK;EACtF,MAAMC,GAAG,GAAG,MAAMX,SAAS,CAAEC,SAAS,EAAE;IACpCW,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,IAAI,EAAE;QAACF,OAAO,EAAEA,OAAO;QAAEC,MAAM,EAAEA,MAAM;QAAEC,IAAI,EAAEA,IAAI;QAAES,QAAQ,EAAER;MAAI;IAAC,CAAC;EAC/F,CAAC,CAAC;EAEF,IAAIS,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;EAE3B,IAAG,CAACD,IAAI,CAACE,MAAM,EAAC;IACZT,QAAQ,CAAC;MAACF,IAAI,EAAEN,YAAY;MAAEK,IAAI,EAAEU,IAAI,CAACV;IAAK,CAAC,CAAC;IAChDE,YAAY,EAAE;IACd,OAAOE,GAAG;EACd,CAAC,MAAM;IACH,MAAMM,IAAI;EACd;AACJ,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGA,CAACC,MAAM,EAAEZ,YAAY,KAAK,MAAMC,QAAQ,IAAK;EACjE,MAAMC,GAAG,GAAG,MAAMX,SAAS,CAAG,cAAaqB,MAAO,EAAC,EAAE;IACjDT,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIK,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;EAE3B,IAAG,CAACD,IAAI,CAACE,MAAM,EAAC;IACZT,QAAQ,CAAC;MAACF,IAAI,EAAEL,WAAW;MAAEkB,MAAM,EAAEA;IAAM,CAAC,CAAC;IAC7CZ,YAAY,EAAE;IACd,OAAOE,GAAG;EACd,CAAC,MAAM;IACH,MAAMM,IAAI;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}